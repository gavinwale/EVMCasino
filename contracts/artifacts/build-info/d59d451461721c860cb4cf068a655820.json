{
	"id": "d59d451461721c860cb4cf068a655820",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.16",
	"solcLongVersion": "0.8.16+commit.07a7930e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/main.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\npragma solidity ^0.8.16;\n\n\n/*\n * Of course, ideally, I would use a Chainlink oracle to bring in real world\n * randomness to the blockchain through their VRF. The VRF provides random\n * data and cryptographic proof of how the values were determined.\n *\n * See more: https://docs.chain.link/docs/vrf/v2/introduction/\n */\ncontract Casino is Ownable {\n\n    // Track users and their balances\n    mapping(address=>uint256)public balances;\n\n    function deposit() public payable {\n        balances[msg.sender] += msg.value;\n    }\n\n    function withdraw(uint256 _amount) public {\n        require(balances[msg.sender] >= _amount, \"Insufficient funds to withdraw!\");\n        balances[msg.sender] -= _amount;\n        (bool sent,) = msg.sender.call{value: _amount}(\"sent\");\n        require(sent, \"Failed to withdraw amount!\");\n    }\n\n    function getCasinoBalance() public view returns(uint256) {\n        return address(this).balance;\n    }\n\n\n\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/main.sol": {
				"Casino": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCasinoBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/main.sol\":406:1020  contract Casino is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"contracts/main.sol\":406:1020  contract Casino is Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/main.sol\":406:1020  contract Casino is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/main.sol\":406:1020  contract Casino is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      dup1\n      0x1a0843c0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/main.sol\":913:1015  function getCasinoBalance() public view returns(uint256) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n        /* \"contracts/main.sol\":987:1008  address(this).balance */\n      selfbalance\n        /* \"contracts/main.sol\":913:1015  function getCasinoBalance() public view returns(uint256) {... */\n    tag_11:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/main.sol\":913:1015  function getCasinoBalance() public view returns(uint256) {... */\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/main.sol\":478:518  mapping(address=>uint256)public balances */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_11\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/main.sol\":615:907  function withdraw(uint256 _amount) public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_22\n      tag_28\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":818:869   */\n      dup2\n      mstore\n        /* \"#utility.yul\":806:808   */\n      0x20\n        /* \"#utility.yul\":791:809   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_13\n        /* \"#utility.yul\":672:875   */\n      jump\n        /* \"contracts/main.sol\":525:609  function deposit() public payable {... */\n    tag_7:\n      tag_22\n      tag_35\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_22\n      tag_38\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n        /* \"contracts/main.sol\":615:907  function withdraw(uint256 _amount) public {... */\n    tag_25:\n        /* \"contracts/main.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/main.sol\":675:695  balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/main.sol\":675:683  balances */\n      0x01\n        /* \"contracts/main.sol\":675:695  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/main.sol\":675:706  balances[msg.sender] >= _amount */\n      dup2\n      gt\n      iszero\n        /* \"contracts/main.sol\":667:742  require(balances[msg.sender] >= _amount, \"Insufficient funds to withdraw!\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1082:1084   */\n      0x20\n        /* \"contracts/main.sol\":667:742  require(balances[msg.sender] >= _amount, \"Insufficient funds to withdraw!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1064:1085   */\n      mstore\n        /* \"#utility.yul\":1121:1123   */\n      0x1f\n        /* \"#utility.yul\":1101:1119   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1094:1124   */\n      mstore\n        /* \"#utility.yul\":1160:1193   */\n      0x496e73756666696369656e742066756e647320746f2077697468647261772100\n        /* \"#utility.yul\":1140:1158   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1133:1194   */\n      mstore\n        /* \"#utility.yul\":1211:1229   */\n      0x64\n      add\n        /* \"contracts/main.sol\":667:742  require(balances[msg.sender] >= _amount, \"Insufficient funds to withdraw!\") */\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"contracts/main.sol\":761:771  msg.sender */\n      caller\n        /* \"contracts/main.sol\":752:772  balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/main.sol\":752:760  balances */\n      0x01\n        /* \"contracts/main.sol\":752:772  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/main.sol\":752:783  balances[msg.sender] -= _amount */\n      dup1\n      sload\n        /* \"contracts/main.sol\":776:783  _amount */\n      dup4\n      swap3\n        /* \"contracts/main.sol\":752:772  balances[msg.sender] */\n      swap1\n        /* \"contracts/main.sol\":752:783  balances[msg.sender] -= _amount */\n      tag_45\n      swap1\n        /* \"contracts/main.sol\":776:783  _amount */\n      dup5\n      swap1\n        /* \"contracts/main.sol\":752:783  balances[msg.sender] -= _amount */\n      tag_46\n      jump\t// in\n    tag_45:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/main.sol\":808:847  msg.sender.call{value: _amount}(\"sent\") */\n      mload(0x40)\n      shl(0xe2, 0x1cd95b9d)\n        /* \"#utility.yul\":1706:1725   */\n      dup2\n      mstore\n        /* \"contracts/main.sol\":794:803  bool sent */\n      0x00\n      swap1\n        /* \"contracts/main.sol\":808:818  msg.sender */\n      caller\n      swap1\n        /* \"contracts/main.sol\":831:838  _amount */\n      dup4\n      swap1\n        /* \"#utility.yul\":1750:1751   */\n      0x04\n        /* \"#utility.yul\":1741:1752   */\n      add\n        /* \"contracts/main.sol\":808:847  msg.sender.call{value: _amount}(\"sent\") */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_51\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_50)\n    tag_51:\n      0x60\n      swap2\n      pop\n    tag_50:\n      pop\n        /* \"contracts/main.sol\":793:847  (bool sent,) = msg.sender.call{value: _amount}(\"sent\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/main.sol\":865:869  sent */\n      dup1\n        /* \"contracts/main.sol\":857:900  require(sent, \"Failed to withdraw amount!\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1965:1967   */\n      0x20\n        /* \"contracts/main.sol\":857:900  require(sent, \"Failed to withdraw amount!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1947:1968   */\n      mstore\n        /* \"#utility.yul\":2004:2006   */\n      0x1a\n        /* \"#utility.yul\":1984:2002   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1977:2007   */\n      mstore\n        /* \"#utility.yul\":2043:2071   */\n      0x4661696c656420746f20776974686472617720616d6f756e7421000000000000\n        /* \"#utility.yul\":2023:2041   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2016:2072   */\n      mstore\n        /* \"#utility.yul\":2089:2107   */\n      0x64\n      add\n        /* \"contracts/main.sol\":857:900  require(sent, \"Failed to withdraw amount!\") */\n      tag_43\n        /* \"#utility.yul\":1763:2113   */\n      jump\n        /* \"contracts/main.sol\":857:900  require(sent, \"Failed to withdraw amount!\") */\n    tag_52:\n        /* \"contracts/main.sol\":657:907  {... */\n      pop\n        /* \"contracts/main.sol\":615:907  function withdraw(uint256 _amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/main.sol\":525:609  function deposit() public payable {... */\n    tag_35:\n        /* \"contracts/main.sol\":578:588  msg.sender */\n      caller\n        /* \"contracts/main.sol\":569:589  balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/main.sol\":569:577  balances */\n      0x01\n        /* \"contracts/main.sol\":569:589  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/main.sol\":569:602  balances[msg.sender] += msg.value */\n      dup1\n      sload\n        /* \"contracts/main.sol\":593:602  msg.value */\n      callvalue\n      swap3\n        /* \"contracts/main.sol\":569:589  balances[msg.sender] */\n      swap1\n        /* \"contracts/main.sol\":569:602  balances[msg.sender] += msg.value */\n      tag_63\n      swap1\n        /* \"contracts/main.sol\":593:602  msg.value */\n      dup5\n      swap1\n        /* \"contracts/main.sol\":569:602  balances[msg.sender] += msg.value */\n      tag_64\n      jump\t// in\n    tag_63:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/main.sol\":525:609  function deposit() public payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2450:2452   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2432:2453   */\n      mstore\n        /* \"#utility.yul\":2489:2491   */\n      0x26\n        /* \"#utility.yul\":2469:2487   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2462:2492   */\n      mstore\n        /* \"#utility.yul\":2528:2562   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2508:2526   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2501:2563   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":2579:2597   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2572:2608   */\n      mstore\n        /* \"#utility.yul\":2625:2644   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_43\n        /* \"#utility.yul\":2248:2650   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2857:2859   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2839:2860   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2876:2894   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2869:2899   */\n      mstore\n        /* \"#utility.yul\":2935:2969   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2915:2933   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2908:2970   */\n      mstore\n        /* \"#utility.yul\":2987:3005   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_43\n        /* \"#utility.yul\":2655:3011   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:482   */\n    tag_18:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      dup1\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_85:\n        /* \"#utility.yul\":350:373   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":402:433   */\n      dup2\n      and\n        /* \"#utility.yul\":392:434   */\n      dup2\n      eq\n        /* \"#utility.yul\":382:452   */\n      tag_86\n      jumpi\n        /* \"#utility.yul\":448:449   */\n      0x00\n        /* \"#utility.yul\":445:446   */\n      dup1\n        /* \"#utility.yul\":438:450   */\n      revert\n        /* \"#utility.yul\":382:452   */\n    tag_86:\n        /* \"#utility.yul\":471:476   */\n      swap4\n        /* \"#utility.yul\":196:482   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:667   */\n    tag_24:\n        /* \"#utility.yul\":546:552   */\n      0x00\n        /* \"#utility.yul\":599:601   */\n      0x20\n        /* \"#utility.yul\":587:596   */\n      dup3\n        /* \"#utility.yul\":578:585   */\n      dup5\n        /* \"#utility.yul\":574:597   */\n      sub\n        /* \"#utility.yul\":570:602   */\n      slt\n        /* \"#utility.yul\":567:619   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":615:616   */\n      0x00\n        /* \"#utility.yul\":612:613   */\n      dup1\n        /* \"#utility.yul\":605:617   */\n      revert\n        /* \"#utility.yul\":567:619   */\n    tag_88:\n      pop\n        /* \"#utility.yul\":638:661   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":487:667   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1240:1367   */\n    tag_81:\n        /* \"#utility.yul\":1301:1311   */\n      0x4e487b71\n        /* \"#utility.yul\":1296:1299   */\n      0xe0\n        /* \"#utility.yul\":1292:1312   */\n      shl\n        /* \"#utility.yul\":1289:1290   */\n      0x00\n        /* \"#utility.yul\":1282:1313   */\n      mstore\n        /* \"#utility.yul\":1332:1336   */\n      0x11\n        /* \"#utility.yul\":1329:1330   */\n      0x04\n        /* \"#utility.yul\":1322:1337   */\n      mstore\n        /* \"#utility.yul\":1356:1360   */\n      0x24\n        /* \"#utility.yul\":1353:1354   */\n      0x00\n        /* \"#utility.yul\":1346:1361   */\n      revert\n        /* \"#utility.yul\":1372:1500   */\n    tag_46:\n        /* \"#utility.yul\":1439:1448   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1460:1471   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1457:1494   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":1474:1492   */\n      tag_94\n      tag_81\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1372:1500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2118:2243   */\n    tag_64:\n        /* \"#utility.yul\":2183:2192   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2204:2214   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2201:2237   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":2217:2235   */\n      tag_94\n      tag_81\n      jump\t// in\n\n    auxdata: 0xa26469706673582212203fb6a8bb6fea4b3aa44af0abc6868bfc18a21f5ef143068ac610b0fab30e356164736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 31,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61049f8061007e6000396000f3fe6080604052600436106100705760003560e01c8063715018a61161004e578063715018a6146100e65780638da5cb5b146100fb578063d0e30db014610123578063f2fde38b1461012b57600080fd5b80631a0843c01461007557806327e235e3146100975780632e1a7d4d146100c4575b600080fd5b34801561008157600080fd5b50475b6040519081526020015b60405180910390f35b3480156100a357600080fd5b506100846100b23660046103de565b60016020526000908152604090205481565b3480156100d057600080fd5b506100e46100df36600461040e565b61014b565b005b3480156100f257600080fd5b506100e4610281565b34801561010757600080fd5b506000546040516001600160a01b03909116815260200161008e565b6100e4610295565b34801561013757600080fd5b506100e46101463660046103de565b6102bb565b336000908152600160205260409020548111156101af5760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e742066756e647320746f207769746864726177210060448201526064015b60405180910390fd5b33600090815260016020526040812080548392906101ce90849061043d565b9091555050604051631cd95b9d60e21b81526000903390839060040160006040518083038185875af1925050503d8060008114610227576040519150601f19603f3d011682016040523d82523d6000602084013e61022c565b606091505b505090508061027d5760405162461bcd60e51b815260206004820152601a60248201527f4661696c656420746f20776974686472617720616d6f756e742100000000000060448201526064016101a6565b5050565b610289610334565b610293600061038e565b565b33600090815260016020526040812080543492906102b4908490610456565b9091555050565b6102c3610334565b6001600160a01b0381166103285760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a6565b6103318161038e565b50565b6000546001600160a01b031633146102935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101a6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156103f057600080fd5b81356001600160a01b038116811461040757600080fd5b9392505050565b60006020828403121561042057600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561045057610450610427565b92915050565b808201808211156104505761045061042756fea26469706673582212203fb6a8bb6fea4b3aa44af0abc6868bfc18a21f5ef143068ac610b0fab30e356164736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x49F DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A0843C0 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH2 0xB2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0xDF CALLDATASIZE PUSH1 0x4 PUSH2 0x40E JUMP JUMPDEST PUSH2 0x14B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x281 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x295 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742066756E647320746F2077697468647261772100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1CE SWAP1 DUP5 SWAP1 PUSH2 0x43D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x1CD95B9D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x22C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x27D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F20776974686472617720616D6F756E7421000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x289 PUSH2 0x334 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x0 PUSH2 0x38E JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x2B4 SWAP1 DUP5 SWAP1 PUSH2 0x456 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2C3 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0x331 DUP2 PUSH2 0x38E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x293 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x427 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xB6 0xA8 0xBB PUSH16 0xEA4B3AA44AF0ABC6868BFC18A21F5EF1 NUMBER MOD DUP11 0xC6 LT 0xB0 STATICCALL 0xB3 0xE CALLDATALOAD PUSH2 0x6473 PUSH16 0x6C634300081000330000000000000000 ",
							"sourceMap": "406:614:2:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:1;936:18:0;:32::i;:::-;406:614:2;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;406:614:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 820,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 910,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balances_143": {
									"entryPoint": null,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_155": {
									"entryPoint": 661,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCasinoBalance_205": {
									"entryPoint": null,
									"id": 205,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 641,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 699,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_193": {
									"entryPoint": 331,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_f7c065b8dacf587ecb6a0327870e069bdaf86e03153af092ca557fd4c2518545__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2b9727cbe94ec529f9d6f9cb0d51eff8adc46e9d2cca7ed8551b694415916972__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_320982fda8c075ed842834db7a7e80e42ac641f7d5a5086d164dde43c88979af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3013:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:3",
														"type": ""
													}
												],
												"src": "14:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "266:216:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "312:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "321:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "324:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "279:32:3"
															},
															"nodeType": "YulIf",
															"src": "276:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "337:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "363:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "350:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "341:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "436:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "445:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "448:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "438:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "438:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "438:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "395:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "406:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "421:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "426:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "417:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "417:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "430:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "413:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "413:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "402:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "402:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "392:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "392:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "385:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "385:50:3"
															},
															"nodeType": "YulIf",
															"src": "382:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "461:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "471:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "461:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "232:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "243:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "255:6:3",
														"type": ""
													}
												],
												"src": "196:286:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "557:110:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "578:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "587:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "574:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "599:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:32:3"
															},
															"nodeType": "YulIf",
															"src": "567:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "628:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "651:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "638:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "638:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "628:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "523:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "534:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "546:6:3",
														"type": ""
													}
												],
												"src": "487:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "783:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "795:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "806:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "791:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "791:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "783:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "825:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "840:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "856:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "861:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "852:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "852:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "865:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "848:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "848:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "836:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "836:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "818:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "818:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "742:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "753:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "764:4:3",
														"type": ""
													}
												],
												"src": "672:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1054:181:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1071:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1082:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1064:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1064:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1105:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1116:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1101:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1121:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1094:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1094:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1094:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1144:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1155:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1140:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1140:18:3"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e647320746f20776974686472617721",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1160:33:3",
																		"type": "",
																		"value": "Insufficient funds to withdraw!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1133:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1133:61:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1133:61:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1203:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1215:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1226:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1211:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1211:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1203:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_320982fda8c075ed842834db7a7e80e42ac641f7d5a5086d164dde43c88979af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1031:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1045:4:3",
														"type": ""
													}
												],
												"src": "880:355:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1272:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1289:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1296:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1301:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1292:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1292:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1282:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1282:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1329:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1332:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1322:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1322:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1353:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1356:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1346:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1346:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1346:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1240:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1421:79:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1431:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1443:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1446:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1439:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1431:4:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1472:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1474:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1474:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1474:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "1463:4:3"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1469:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1460:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1460:11:3"
															},
															"nodeType": "YulIf",
															"src": "1457:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1403:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1406:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1412:4:3",
														"type": ""
													}
												],
												"src": "1372:128:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1696:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1713:3:3"
																	},
																	{
																		"hexValue": "73656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1718:6:3",
																		"type": "",
																		"value": "sent"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1706:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1706:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1706:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1734:18:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1745:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1750:1:3",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1741:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1741:11:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1734:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_f7c065b8dacf587ecb6a0327870e069bdaf86e03153af092ca557fd4c2518545__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1680:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1688:3:3",
														"type": ""
													}
												],
												"src": "1505:253:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1937:176:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1954:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1965:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1947:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1947:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1988:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1999:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1984:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2004:2:3",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1977:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1977:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2027:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2038:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:18:3"
																	},
																	{
																		"hexValue": "4661696c656420746f20776974686472617720616d6f756e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2043:28:3",
																		"type": "",
																		"value": "Failed to withdraw amount!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2016:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2016:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2081:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2093:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2104:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2089:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2089:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2081:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2b9727cbe94ec529f9d6f9cb0d51eff8adc46e9d2cca7ed8551b694415916972__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1914:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1928:4:3",
														"type": ""
													}
												],
												"src": "1763:350:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2166:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2176:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2187:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2190:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2183:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2176:3:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2215:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2217:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2217:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2217:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2207:1:3"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2210:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2204:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:10:3"
															},
															"nodeType": "YulIf",
															"src": "2201:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2149:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2152:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2158:3:3",
														"type": ""
													}
												],
												"src": "2118:125:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2422:228:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2439:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2450:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2432:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2432:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2432:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2473:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2484:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2469:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2469:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2489:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2462:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2462:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2462:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2512:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2523:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2508:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2508:18:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2528:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2501:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2501:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2501:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2583:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2594:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2579:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2579:18:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2599:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2572:36:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2617:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2625:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2625:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2617:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2399:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2413:4:3",
														"type": ""
													}
												],
												"src": "2248:402:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2829:182:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2846:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2857:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2839:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2839:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2839:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2880:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2891:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2876:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2896:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2869:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2869:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2919:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2930:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2915:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2915:18:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2935:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2908:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2908:62:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2979:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2991:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3002:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2987:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2987:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2979:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2806:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2820:4:3",
														"type": ""
													}
												],
												"src": "2655:356:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_320982fda8c075ed842834db7a7e80e42ac641f7d5a5086d164dde43c88979af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Insufficient funds to withdraw!\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_f7c065b8dacf587ecb6a0327870e069bdaf86e03153af092ca557fd4c2518545__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"sent\")\n        end := add(pos, 4)\n    }\n    function abi_encode_tuple_t_stringliteral_2b9727cbe94ec529f9d6f9cb0d51eff8adc46e9d2cca7ed8551b694415916972__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Failed to withdraw amount!\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100705760003560e01c8063715018a61161004e578063715018a6146100e65780638da5cb5b146100fb578063d0e30db014610123578063f2fde38b1461012b57600080fd5b80631a0843c01461007557806327e235e3146100975780632e1a7d4d146100c4575b600080fd5b34801561008157600080fd5b50475b6040519081526020015b60405180910390f35b3480156100a357600080fd5b506100846100b23660046103de565b60016020526000908152604090205481565b3480156100d057600080fd5b506100e46100df36600461040e565b61014b565b005b3480156100f257600080fd5b506100e4610281565b34801561010757600080fd5b506000546040516001600160a01b03909116815260200161008e565b6100e4610295565b34801561013757600080fd5b506100e46101463660046103de565b6102bb565b336000908152600160205260409020548111156101af5760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e742066756e647320746f207769746864726177210060448201526064015b60405180910390fd5b33600090815260016020526040812080548392906101ce90849061043d565b9091555050604051631cd95b9d60e21b81526000903390839060040160006040518083038185875af1925050503d8060008114610227576040519150601f19603f3d011682016040523d82523d6000602084013e61022c565b606091505b505090508061027d5760405162461bcd60e51b815260206004820152601a60248201527f4661696c656420746f20776974686472617720616d6f756e742100000000000060448201526064016101a6565b5050565b610289610334565b610293600061038e565b565b33600090815260016020526040812080543492906102b4908490610456565b9091555050565b6102c3610334565b6001600160a01b0381166103285760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a6565b6103318161038e565b50565b6000546001600160a01b031633146102935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101a6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156103f057600080fd5b81356001600160a01b038116811461040757600080fd5b9392505050565b60006020828403121561042057600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561045057610450610427565b92915050565b808201808211156104505761045061042756fea26469706673582212203fb6a8bb6fea4b3aa44af0abc6868bfc18a21f5ef143068ac610b0fab30e356164736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A0843C0 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH2 0xB2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0xDF CALLDATASIZE PUSH1 0x4 PUSH2 0x40E JUMP JUMPDEST PUSH2 0x14B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x281 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0xE4 PUSH2 0x295 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE4 PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742066756E647320746F2077697468647261772100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1CE SWAP1 DUP5 SWAP1 PUSH2 0x43D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x1CD95B9D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x22C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x27D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F20776974686472617720616D6F756E7421000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x289 PUSH2 0x334 JUMP JUMPDEST PUSH2 0x293 PUSH1 0x0 PUSH2 0x38E JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x2B4 SWAP1 DUP5 SWAP1 PUSH2 0x456 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH2 0x2C3 PUSH2 0x334 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0x331 DUP2 PUSH2 0x38E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x293 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x427 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xB6 0xA8 0xBB PUSH16 0xEA4B3AA44AF0ABC6868BFC18A21F5EF1 NUMBER MOD DUP11 0xC6 LT 0xB0 STATICCALL 0xB3 0xE CALLDATALOAD PUSH2 0x6473 PUSH16 0x6C634300081000330000000000000000 ",
							"sourceMap": "406:614:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;913:102;;;;;;;;;;-1:-1:-1;987:21:2;913:102;;;160:25:3;;;148:2;133:18;913:102:2;;;;;;;;478:40;;;;;;;;;;-1:-1:-1;478:40:2;;;;;:::i;:::-;;;;;;;;;;;;;;615:292;;;;;;;;;;-1:-1:-1;615:292:2;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;818:51:3;;806:2;791:18;1201:85:0;672:203:3;525:84:2;;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;615:292:2:-;684:10;675:20;;;;:8;:20;;;;;;:31;-1:-1:-1;675:31:2;667:75;;;;-1:-1:-1;;;667:75:2;;1082:2:3;667:75:2;;;1064:21:3;1121:2;1101:18;;;1094:30;1160:33;1140:18;;;1133:61;1211:18;;667:75:2;;;;;;;;;761:10;752:20;;;;:8;:20;;;;;:31;;776:7;;752:20;:31;;776:7;;752:31;:::i;:::-;;;;-1:-1:-1;;808:39:2;;-1:-1:-1;;;1706:19:3;;794:9:2;;808:10;;831:7;;1750:1:3;1741:11;808:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;793:54;;;865:4;857:43;;;;-1:-1:-1;;;857:43:2;;1965:2:3;857:43:2;;;1947:21:3;2004:2;1984:18;;;1977:30;2043:28;2023:18;;;2016:56;2089:18;;857:43:2;1763:350:3;857:43:2;657:250;615:292;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;525:84:2:-;578:10;569:20;;;;:8;:20;;;;;:33;;593:9;;569:20;:33;;593:9;;569:33;:::i;:::-;;;;-1:-1:-1;;525:84:2:o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;2450:2:3;2161:73:0::1;::::0;::::1;2432:21:3::0;2489:2;2469:18;;;2462:30;2528:34;2508:18;;;2501:62;-1:-1:-1;;;2579:18:3;;;2572:36;2625:19;;2161:73:0::1;2248:402:3::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;2857:2:3;1414:68:0;;;2839:21:3;;;2876:18;;;2869:30;2935:34;2915:18;;;2908:62;2987:18;;1414:68:0;2655:356:3;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;196:286:3:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;350:23;;-1:-1:-1;;;;;402:31:3;;392:42;;382:70;;448:1;445;438:12;382:70;471:5;196:286;-1:-1:-1;;;196:286:3:o;487:180::-;546:6;599:2;587:9;578:7;574:23;570:32;567:52;;;615:1;612;605:12;567:52;-1:-1:-1;638:23:3;;487:180;-1:-1:-1;487:180:3:o;1240:127::-;1301:10;1296:3;1292:20;1289:1;1282:31;1332:4;1329:1;1322:15;1356:4;1353:1;1346:15;1372:128;1439:9;;;1460:11;;;1457:37;;;1474:18;;:::i;:::-;1372:128;;;;:::o;2118:125::-;2183:9;;;2204:10;;;2201:36;;;2217:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "236600",
								"executionCost": "26116",
								"totalCost": "262716"
							},
							"external": {
								"balances(address)": "2496",
								"deposit()": "24534",
								"getCasinoBalance()": "173",
								"owner()": "2323",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28364",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 406,
									"end": 1020,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 406,
									"end": 1020,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203fb6a8bb6fea4b3aa44af0abc6868bfc18a21f5ef143068ac610b0fab30e356164736f6c63430008100033",
									".code": [
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "D0E30DB0"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "1A0843C0"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "27E235E3"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "2E1A7D4D"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 406,
											"end": 1020,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 987,
											"end": 1008,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 913,
											"end": 1015,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 478,
											"end": 518,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 478,
											"end": 518,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 518,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 478,
											"end": 518,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 478,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 478,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 478,
											"end": 518,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 478,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 478,
											"end": 518,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 478,
											"end": 518,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 478,
											"end": 518,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 518,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 518,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 478,
											"end": 518,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 907,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 615,
											"end": 907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 615,
											"end": 907,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 615,
											"end": 907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 615,
											"end": 907,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 615,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 615,
											"end": 907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 615,
											"end": 907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 615,
											"end": 907,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 615,
											"end": 907,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 615,
											"end": 907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 615,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 615,
											"end": 907,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 615,
											"end": 907,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 615,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 615,
											"end": 907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 907,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 615,
											"end": 907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 615,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 615,
											"end": 907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 907,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 615,
											"end": 907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 615,
											"end": 907,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 818,
											"end": 869,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 806,
											"end": 808,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 791,
											"end": 809,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 672,
											"end": 875,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 525,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 525,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 525,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 525,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 525,
											"end": 609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 615,
											"end": 907,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 615,
											"end": 907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 675,
											"end": 695,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 675,
											"end": 695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 675,
											"end": 683,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 675,
											"end": 695,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 675,
											"end": 695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 695,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 675,
											"end": 695,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 675,
											"end": 706,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 675,
											"end": 706,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 667,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 667,
											"end": 742,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 667,
											"end": 742,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 742,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 667,
											"end": 742,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 667,
											"end": 742,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1084,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 667,
											"end": 742,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 667,
											"end": 742,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 667,
											"end": 742,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1123,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1124,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1160,
											"end": 1193,
											"name": "PUSH",
											"source": 3,
											"value": "496E73756666696369656E742066756E647320746F2077697468647261772100"
										},
										{
											"begin": 1140,
											"end": 1158,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1140,
											"end": 1158,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1140,
											"end": 1158,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1133,
											"end": 1194,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1229,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1211,
											"end": 1229,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 667,
											"end": 742,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 667,
											"end": 742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 667,
											"end": 742,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 742,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 667,
											"end": 742,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 667,
											"end": 742,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 667,
											"end": 742,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 667,
											"end": 742,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 667,
											"end": 742,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 667,
											"end": 742,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 667,
											"end": 742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 761,
											"end": 771,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 752,
											"end": 772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 752,
											"end": 772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 752,
											"end": 772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 752,
											"end": 760,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 752,
											"end": 772,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 752,
											"end": 772,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 752,
											"end": 772,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 752,
											"end": 783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 752,
											"end": 783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 776,
											"end": 783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 776,
											"end": 783,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 752,
											"end": 772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 752,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 752,
											"end": 783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 776,
											"end": 783,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 776,
											"end": 783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 752,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 752,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 752,
											"end": 783,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 752,
											"end": 783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 752,
											"end": 783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 752,
											"end": 783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 752,
											"end": 783,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 808,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 847,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CD95B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 794,
											"end": 803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 818,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 808,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 831,
											"end": 838,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 831,
											"end": 838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1741,
											"end": 1752,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 808,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 847,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 808,
											"end": 847,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 847,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 808,
											"end": 847,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 808,
											"end": 847,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 808,
											"end": 847,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 808,
											"end": 847,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 808,
											"end": 847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 808,
											"end": 847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 808,
											"end": 847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 808,
											"end": 847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 793,
											"end": 847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 793,
											"end": 847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 793,
											"end": 847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 865,
											"end": 869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 857,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 857,
											"end": 900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 857,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 857,
											"end": 900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 857,
											"end": 900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 1967,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 857,
											"end": 900,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 857,
											"end": 900,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 857,
											"end": 900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 1968,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2004,
											"end": 2006,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1977,
											"end": 2007,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2043,
											"end": 2071,
											"name": "PUSH",
											"source": 3,
											"value": "4661696C656420746F20776974686472617720616D6F756E7421000000000000"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2016,
											"end": 2072,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2107,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2089,
											"end": 2107,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 857,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1763,
											"end": 2113,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 857,
											"end": 900,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 857,
											"end": 900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 657,
											"end": 907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 525,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 578,
											"end": 588,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 569,
											"end": 577,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 569,
											"end": 602,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 602,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 593,
											"end": 602,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 593,
											"end": 602,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 569,
											"end": 589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 569,
											"end": 602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 593,
											"end": 602,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 593,
											"end": 602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 569,
											"end": 602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 569,
											"end": 602,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 569,
											"end": 602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 569,
											"end": 602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 569,
											"end": 602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 569,
											"end": 602,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 525,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2452,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2453,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2489,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2492,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2562,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2508,
											"end": 2526,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2508,
											"end": 2526,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2508,
											"end": 2526,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2501,
											"end": 2563,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2579,
											"end": 2597,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2579,
											"end": 2597,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2579,
											"end": 2597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2572,
											"end": 2608,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2644,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2625,
											"end": 2644,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2248,
											"end": 2650,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2859,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2860,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2860,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2876,
											"end": 2894,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2876,
											"end": 2894,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2876,
											"end": 2894,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2869,
											"end": 2899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 2969,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2655,
											"end": 3011,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 482,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 196,
											"end": 482,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 350,
											"end": 373,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 402,
											"end": 433,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 402,
											"end": 433,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 392,
											"end": 434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 392,
											"end": 434,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 382,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 382,
											"end": 452,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 448,
											"end": 449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 446,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 438,
											"end": 450,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 382,
											"end": 452,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 382,
											"end": 452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 471,
											"end": 476,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 196,
											"end": 482,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 487,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 487,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 546,
											"end": 552,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 601,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 587,
											"end": 596,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 578,
											"end": 585,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 574,
											"end": 597,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 570,
											"end": 602,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 567,
											"end": 619,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 567,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 567,
											"end": 619,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 615,
											"end": 616,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 605,
											"end": 617,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 567,
											"end": 619,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 567,
											"end": 619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 638,
											"end": 661,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 638,
											"end": 661,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 487,
											"end": 667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 487,
											"end": 667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1367,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1240,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1296,
											"end": 1299,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1290,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1313,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1336,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1329,
											"end": 1330,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1322,
											"end": 1337,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1356,
											"end": 1360,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1353,
											"end": 1354,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1361,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1500,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1372,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1448,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1460,
											"end": 1471,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1460,
											"end": 1471,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1460,
											"end": 1471,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1494,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1457,
											"end": 1494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1474,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1474,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1474,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1474,
											"end": 1492,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1474,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1500,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1500,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1372,
											"end": 1500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2243,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2118,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2192,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2192,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2183,
											"end": 2192,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2201,
											"end": 2237,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2201,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2201,
											"end": 2237,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2217,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2217,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2217,
											"end": 2235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/main.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balances(address)": "27e235e3",
							"deposit()": "d0e30db0",
							"getCasinoBalance()": "1a0843c0",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCasinoBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/main.sol\":\"Casino\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/main.sol\":{\"keccak256\":\"0xdb98a2e2ef93db31bd1605c91ca588e1ecfcccd410378222e3cbf6d9c335269e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5375c9d84168d6973c0013d88813c9eff63dade9cb28e0cb1d12074b17c6ecbf\",\"dweb:/ipfs/QmT3kPhYY47vkuinkJUf68nmCoQ7gwEY1SgyYsqSTKqzVR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/main.sol:Casino",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 143,
								"contract": "contracts/main.sol:Casino",
								"label": "balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/main.sol": {
				"ast": {
					"absolutePath": "contracts/main.sol",
					"exportedSymbols": {
						"Casino": [
							206
						],
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 207,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 207,
							"sourceUnit": 113,
							"src": "33:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "87:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "Ownable",
										"nameLocations": [
											"425:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "425:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "425:7:2"
								}
							],
							"canonicalName": "Casino",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 206,
							"linearizedBaseContracts": [
								206,
								112,
								134
							],
							"name": "Casino",
							"nameLocation": "415:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 143,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "510:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 206,
									"src": "478:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 142,
										"keyType": {
											"id": 140,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "486:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "478:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 141,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "495:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "559:50:2",
										"statements": [
											{
												"expression": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 146,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "569:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 149,
														"indexExpression": {
															"expression": {
																"id": 147,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "578:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "582:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "578:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "569:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 150,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "593:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "597:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "593:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "569:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "569:33:2"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "534:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:2:2"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "559:0:2"
									},
									"scope": 206,
									"src": "525:84:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "657:250:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 161,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "675:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 164,
																"indexExpression": {
																	"expression": {
																		"id": 162,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "684:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "688:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "684:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "675:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 165,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "699:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "675:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e647320746f20776974686472617721",
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "708:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_320982fda8c075ed842834db7a7e80e42ac641f7d5a5086d164dde43c88979af",
																"typeString": "literal_string \"Insufficient funds to withdraw!\""
															},
															"value": "Insufficient funds to withdraw!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_320982fda8c075ed842834db7a7e80e42ac641f7d5a5086d164dde43c88979af",
																"typeString": "literal_string \"Insufficient funds to withdraw!\""
															}
														],
														"id": 160,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "667:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "667:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "667:75:2"
											},
											{
												"expression": {
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 170,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "752:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 173,
														"indexExpression": {
															"expression": {
																"id": 171,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "761:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "765:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "761:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "752:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 174,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "776:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "752:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "752:31:2"
											},
											{
												"assignments": [
													178,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 178,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "799:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "794:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 177,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "794:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 186,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "73656e74",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "840:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f7c065b8dacf587ecb6a0327870e069bdaf86e03153af092ca557fd4c2518545",
																"typeString": "literal_string \"sent\""
															},
															"value": "sent"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_f7c065b8dacf587ecb6a0327870e069bdaf86e03153af092ca557fd4c2518545",
																"typeString": "literal_string \"sent\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_f7c065b8dacf587ecb6a0327870e069bdaf86e03153af092ca557fd4c2518545",
																	"typeString": "literal_string \"sent\""
																}
															],
															"expression": {
																"expression": {
																	"id": 179,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "808:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "812:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "808:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "819:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "808:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 182,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "831:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "808:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "808:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "793:54:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 188,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "865:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f20776974686472617720616d6f756e7421",
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "871:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2b9727cbe94ec529f9d6f9cb0d51eff8adc46e9d2cca7ed8551b694415916972",
																"typeString": "literal_string \"Failed to withdraw amount!\""
															},
															"value": "Failed to withdraw amount!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2b9727cbe94ec529f9d6f9cb0d51eff8adc46e9d2cca7ed8551b694415916972",
																"typeString": "literal_string \"Failed to withdraw amount!\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "857:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "857:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "857:43:2"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "624:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "641:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "633:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "632:17:2"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "657:0:2"
									},
									"scope": 206,
									"src": "615:292:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "970:45:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 200,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "995:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Casino_$206",
																	"typeString": "contract Casino"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Casino_$206",
																	"typeString": "contract Casino"
																}
															],
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "987:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 198,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "987:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "987:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1001:7:2",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "987:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 197,
												"id": 203,
												"nodeType": "Return",
												"src": "980:28:2"
											}
										]
									},
									"functionSelector": "1a0843c0",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCasinoBalance",
									"nameLocation": "922:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "938:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "961:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:9:2"
									},
									"scope": 206,
									"src": "913:102:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 207,
							"src": "406:614:2",
							"usedErrors": []
						}
					],
					"src": "33:987:2"
				},
				"id": 2
			}
		}
	}
}